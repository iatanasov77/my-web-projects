# All 'vagrant up' finished for less than 10 minutes on centos7 box
#####################################################################
dependencies:
	#remiReleaseRpm: 'https://rpms.remirepo.net/enterprise/remi-release-7.rpm'
	#remiReleaseRpm: 'https://rpms.remirepo.net/enterprise/remi-release-8.rpm'
    remiReleaseRpm: 'https://rpms.remirepo.net/enterprise/8/remi/x86_64/remi-release-8.3-1.el8.remi.noarch.rpm'
	
gui:
    documentRoot: '/projects/VS_MyProjects_GuiSymfony/public'
    database:
        name: 'VsMyProjects'
        dump: '/vagrant/doc/sql/VsMyProjects-20210509.sql'

git:
    userName: 'Ivan I. Atanasov'
    userEmail: 'i.atanasov77@gmail.com'
    
vstools:
    mkvhost: 'v0.3.0'
    mkphar: 'v0.2.0'
    bumpversion: 'v1.2.0'
    gitflow-reinit: 'v1.2.0'
    #ftpdeploy: 'v3.3.2'
    ftpdeploy: 'download'

###############################################################
# Subsystems refactored from Array to Hashes 
# but this format is used properly only for 'dotnet' for now 
subsystems:
    # Config_Lite PHP Library , Needed for
    # gitflow-reinit Script
    config_lite:
        enabled: true
        version: '0.2.6'
	symfony:
		enabled: true
    mongodb:
        enabled: true

    cassandra:
        enabled: true
        cassandraPackage: 'dsc30' # 'dsc21' For CentOs 7
        phpDriverVersion: '2.16.0'
        phpDriverInstall: true
        phpDriverInstallFromGitHub: true # If false Driver is Installed From 'pecl'
        databases:
            'vs_dev.products': '/projects/VS_SymfonyBundlesDevelop/doc/cql/products.cql'

    docker:
      enabled: false

    # Composer is installed by vs_lamp::php, 
    # here you can configure to install old version if needed
    composer:
        enabled: true
        command: 'composer_1'
        version: '1.10.20'
    
    phing:
      enabled: true

    dotnet:
        enabled: false
        # In the begining this was the version by: 2.1.4
        # But the package MySql.Data require version: 2.2
        dotnet_core: '3.1'
        sdks: ['2.2']
        sdkUser: 'vagrant'  # Cannot be root
        #mono: 'latest'
        
    tomcat:
        enabled: false
        ############################################################################
        # Default instance is tomcat 9. 
        # I think source urls are changed for different network locations.
        ############################################################################
        catalinaHome: '/opt/tomcat/default'
        sourceUrl: 'https://downloads.apache.org/tomcat/tomcat-9/v9.0.45/bin/apache-tomcat-9.0.45.tar.gz'
        jdkPackage: 'java-1.8.0-openjdk-devel'
        instances:
        	tomcat_10:
        		catalinaHome: '/opt/tomcat/tomcat_10'
        		sourceUrl: 'https://downloads.apache.org/tomcat/tomcat-10/v10.0.5/bin/apache-tomcat-10.0.5.tar.gz'
        		serverPort: '8107'
                connectorPort: '8181'
            tomcat_8:
                catalinaHome: '/opt/tomcat/tomcat_8'
                sourceUrl: 'https://mirrors.netix.net/apache/tomcat/tomcat-8/v8.5.63/bin/apache-tomcat-8.5.63.tar.gz'
                serverPort: '8105'
                connectorPort: '8180'
    
    python:
        enabled: false
        virtual_environments:
            django_3:
                pythonVersion: 3
                packages: ['Django', 'mysqlclient', 'django-webpack-loader']

    ruby:
        enabled: false
        virtual_environments:
            ruby_3:
                rubyVersion: '3.0.0'
                defaultUse: true
                packages: ['rails']

    phpbrew:
        enabled: true
        version: 'latest'
        
        system_wide: true
        additional_dependencies:
           #- httpd-devel
           - libcurl-devel
           - oniguruma-devel
           - libsodium-devel
           - libjpeg-turbo-devel
           - libpng-devel
           - libzip-devel
           - gmp-devel  # Needed For Cassandra Extension
        install: []   #['7.4.1', '5.6'

    # Everything fails :) Use on hand: composer global require drush/drush:10.3.6
    # /usr/local/bin/drush is created to the /home/vagrant/.composer/vendor/bin
    drush:
        enabled: true
        versions: ['8', '9', '10']   # Valid values are '6', '7', '8', '9', '10', and 'master'
        defaultVersion: '8'
        
frontendtools:
    #nodejs: latest
    nodejs: 16.10.0
    nvm:
        user: 'vagrant'
        node_instances:
            '16.10.0': { set_default: true }
            '10.24.1': {}
    tools:
        yarn:
            version: 'latest'
        gulp:
            version: 'latest'
        angular-cli:
            version: 'latest'
        create-react-app:
            version: 'latest'
        # Using for upgrade package.json dependencie's versions
        npm-upgrade:
            version: 'latest'

packages:
    - mc
    - gitflow
    - gitftp
    - curl
    - vim
    - nano
    - htop
    - dos2unix
    - unzip
    - lynx
    # On CentOs8 Python2 is not installed by default but it is required from Sylius Setup
    - python2
    # For Check about opened ports: `sudo lsof -i -P -n | grep LISTEN` OR USE: `sudo netstat -tulpn | grep LISTEN`
    - lsof

lamp:
    phpVersion: '7.4'
    phpunit: false
    forcePhp7Repo: true
   
    mysql:
        # provider = false mean use default
        provider: 'mysql' # Avaiable options: false, 'mysql', 'mariadb'
        # Empty Example: databases
        #databases: {}
        databases:
        	vs_symfony_bundles_develop:
                name: 'VsSymfonyBundlesDevelop'
                dump: '/projects/VS_SymfonyBundlesDevelop/doc/sql/VsSymfonyBundlesDevelop_20210416.sql'
            vs_salary_j:
                name: 'VsSalaryJ'
                dump: '/projects/VS_SalaryJ/doc/sql/VsSalaryJ.sql'
            vs_salary_j_JUNONA_OLD:
                name: 'Junona_OLD'
                dump: '/projects/Junona/Junona-20210922.sql'

    # For JSP Pages require apache module 'proxy_ajp'
    apacheModules: 
        - expires
        - headers
        - rewrite
        - vhost_alias
        - version
        - env
        - ssl
        - proxy
        - proxy_fcgi
        - proxy_http
        - proxy_html
        # Used of Java Applications
        - proxy_ajp
        # Used of Python Applications
        - wsgi
        # Used of Ruby Applications
        - passenger

    phpSettings:
        'PHP/memory_limit': '-1'
        'PHP/max_execution_time': '300'
        'PHP/post_max_size': '2G'
        'PHP/upload_max_filesize': '2G'
        'Date/date.timezone': 'Europe/Sofia'
        'PHAR/phar.readonly': 'Off'

    phpModules:
        apcu:
            ini_prefix: '20-'
            provider: 'pecl'
        # ERROR: pecl/zendopcache requires PHP (version >= 5.2.0, version <= 5.5.0), installed version is 7.2.24
        #zendopcache:
        #    ini_prefix: '20-'
        #    provider: 'pecl'
        intl:
            ini_prefix: '20-'
        mbstring:
            ini_prefix: '20-'
        mongodb:
            ini_prefix: '20-'
            provider: 'pecl'
        
        # xdebug 3.x.x example config
        xdebug:
        	ensure: 'latest'
            ini_prefix: '20-'
            provider: 'pecl'
            zend: true
            # see http://xdebug.org/docs/all_settings
            settings:
                # For xdebug3 many config vars are changed. 
                # Reference: https://xdebug.org/docs/upgrade_guide
                # ---------------------------------------------------
                'xdebug.mode': 'debug'
                'xdebug.start_with_request': 'trigger'
                'xdebug.discover_client_host': '1'
                'xdebug.client_port': '9000'
        
        # xdebug 2.x.x example config
        xdebug:
            ensure: '2.9.8' #Because the latest versions(3.x.x) has different settings
            ini_prefix: '20-'
            provider: 'pecl'
            zend: true
            # see http://xdebug.org/docs/all_settings
            settings:
                'xdebug.default_enable': '1'
                'xdebug.remote_enable': '1'
                'xdebug.remote_handler': 'dbgp'
                'xdebug.remote_host': 'localhost'
                'xdebug.remote_port': '9000'
                'xdebug.remote_autostart': '0'
                'xdebug.remote_connect_back': '1'
                'xdebug.idekey': ''
                #remote_log: ''
            
                # Tracer settings
                'xdebug.trace_format': '1'
                'xdebug.trace_enable_trigger': '1'
                'xdebug.trace_output_name': 'trace.out'
                'xdebug.trace_output_dir': '/vagrant/gui_symfony/var/Xdebug'
            
                # Profiler settings
                'xdebug.profiler_enable': '1'
                'xdebug.profiler_enable_trigger': '1'
                'xdebug.profiler_output_name': 'cachegrind.out'
                'xdebug.profiler_output_dir': '/vagrant/gui_symfony/var/Xdebug'
        zip:
            ini_prefix: '40-'
        json:
            ini_prefix: '20-'
        mysqlnd:
            ini_prefix: '20-'
            multifile_settings: true
            settings:
                mysqlnd: {}
                #mysql: {}
                #mysqli: {}
                #pdo_mysql: {}
                #sysvshm: {}
        xml:
            ini_prefix: '20-'
            multifile_settings: true
            settings:
                dom: {}
                simplexml: {}
                xmlwriter: {}
                xsl: {}
                #wddx: {}
                #xmlreader: {}
        gd:
            ini_prefix: '20-'
        bcmath:
            ini_prefix: '20-'

    phpMyAdmin:
        source: 'https://files.phpmyadmin.net/phpMyAdmin/5.0.4/phpMyAdmin-5.0.4-all-languages.zip'
        targetDirName: 'phpMyAdmin-5.0.4-all-languages'

