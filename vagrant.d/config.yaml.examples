# All 'vagrant up' finished for up than 25 minutes on centos8 box
#####################################################################
dependencies:
    remiReleaseRpm: ''
    #remiReleaseRpm: 'https://rpms.remirepo.net/enterprise/8/remi/x86_64/remi-release-8.5-3.el8.remi.noarch.rpm'
    
gui:
    guiUrl: 'https://github.com/iatanasov77/my-web-projects-gui-symfony.git'
    guiRoot: '/projects/VS_MyProjects_GuiSymfony'
    documentRoot: '/projects/VS_MyProjects_GuiSymfony/public'
    database:
        name: 'VsMyWebProjects'
        dump: '/projects/VS_MyProjects_GuiSymfony/doc/sql/VsMyWebProjects_ALL_DATA.sql'

git:
    userName: 'Ivan I. Atanasov'
    userEmail: 'i.atanasov77@gmail.com'
    
vstools:
    mkvhost: 'v0.3.0'
    mkphar: 'v0.2.0'
    bumpversion: 'v1.2.0'
    gitflow-reinit: 'v1.2.0'
    #ftpdeploy: 'v3.3.2'
    ftpdeploy: 'download'

###############################################################
# Subsystems refactored from Array to Hashes 
# but this format is used properly only for 'dotnet' for now 
subsystems:
    # MailCatcher, start it on your machine, and 
    # it creates  a temporary SMTP server that you can send to
    mailcatcher:
        enabled: true

    # Config_Lite PHP Library , Needed for
    # gitflow-reinit Script
    config_lite:
        enabled: true
        version: '0.2.6'
    symfony:
        enabled: true
    mongodb:
        enabled: true
        version: '6.0'

    cassandra:
        enabled: true
        cassandraPackage: 'dsc30' # 'dsc21' For CentOs 7
        phpDriverVersion: '2.16.0'
        phpDriverInstall: true
        phpDriverInstallFromGitHub: true # If false Driver is Installed From 'pecl'
        databases:
            'vs_dev.products': '/projects/VS_SymfonyBundlesDevelop/doc/cql/products.cql'

    docker:
        enabled: true
        docker_users: ['vagrant', 'root']
        version: 'latest'
        composer_version: '2.18.1'
        portainer_password: 'Portainer@123'

    # Composer is installed by vs_lamp::php, 
    # here you can configure to install old version if needed
    composer:
        enabled: true
        command: 'composer_1'
        version: '1.10.20'
    
    phing:
      enabled: true

    dotnet:
        enabled: false
        # In the begining this was the version by: 2.1.4
        # But the package MySql.Data require version: 2.2
        dotnet_core: '3.1'
        sdks: ['2.2']
        sdkUser: 'vagrant'  # Cannot be root
        #mono: 'latest'
        
    tomcat:
        enabled: false
        jdkVersion: '17'
        mavenVersion: '3.9.2'
        tomcatUser: 'vagrant'
        tomcatGroup: 'vagrant'
        instances:
            tomcat_10:
                catalinaHome: '/opt/tomcat/tomcat_10'
                sourceUrl: 'https://downloads.apache.org/tomcat/tomcat-10/v10.1.9/bin/apache-tomcat-10.1.9.tar.gz'
                serverPort: '8006'
                httpConnectorPort: '8080'
                ajpConnectorPort: '8009'
            tomcat_9:
                catalinaHome: '/opt/tomcat/tomcat_9'
                sourceUrl: 'https://downloads.apache.org/tomcat/tomcat-9/v9.0.75/bin/apache-tomcat-9.0.75.tar.gz'
                serverPort: '8106'
                httpConnectorPort: '8180'
                ajpConnectorPort: '8109'
    
    python:
        enabled: false
        virtual_environments:
            django_3:
                pythonVersion: 3
                packages: ['Django', 'mysqlclient', 'django-webpack-loader']

    ruby:
        enabled: false
        rubyDefaultVersion: '2.7.2'
        virtual_environments:
            ruby_3:
                rubyVersion: '3.0.0'
                packages: ['rails']

    phpbrew:
        enabled: true
        version: 'latest'
        
        system_wide: true
        additional_dependencies:
           #- httpd-devel
           - libcurl-devel
           - oniguruma-devel
           - libsodium-devel
           - libjpeg-turbo-devel
           - libpng-devel
           - libzip-devel
           - systemd-devel # Needed For PHP 7 Versions
           - gmp-devel  # Needed For Cassandra Extension
        install: []   #['7.4.1', '5.6'

    # Everything fails :) Use on hand: composer global require drush/drush:10.3.6
    # /usr/local/bin/drush is created to the /home/vagrant/.composer/vendor/bin
    drush:
        enabled: false
        versions: ['8', '9', '10']   # Valid values are '6', '7', '8', '9', '10', and 'master'
        defaultVersion: '8'
        
    ffmpeg:
        enabled: true
        
    cloud_platforms:
        enabled: true
        azure: true
        aws: true
        digital_ocean: '1.94.0'
        s3tools: true
        k8s_station: '1.27.3'
        
        ##################################################################
        # Used to Copy Files From/To Cloud Block Storages
        # Examples:
        # --------
        # rclone ls <config-name>:<space-name>
        # rclone copy <local-folder> <config-name>:<space-name>
        # rclone copy <config-name>:<space-name> <local-folder>
        ##################################################################
        rclone:
            enabled: true
            configs:
                video_platform:
                    provider: DigitalOcean
                    accessKey: 'NOT_DEFINED'
                    secretKey: 'NOT_DEFINED'
                    endpoint: 'fra1.digitaloceanspaces.com'
                    acl: private
        
    hashicorp:
        enabled: true
        terraform:
            version: '1.4.6'
            config:
                aws:
                    accessKey: 'NOT_DEFINED'
                    secretKey: 'NOT_DEFINED'
                    region: 'eu-central-1'
                azure:
                    clientId: 'NOT_DEFINED'
                    clientSecret: 'NOT_DEFINED'
                    subscriptionId: 'NOT_DEFINED'
                    tenantId: 'NOT_DEFINED'
                digitalocean:
                    token: 'NOT_DEFINED'
                    
    payment_gateways:
        enabled: true
        stripe_cli: true
        
frontendtools:
    #nodejs: latest
    nodejs: 18.17.0
    nvm:
        user: 'vagrant'
        node_instances:
            '18.17.0': { set_default: true }
            '20.0.0': {}
    tools:
        yarn:
            version: 'latest'
        gulp:
            version: 'latest'
        ######################################################################################
        # PM2 is a production process manager for Node.js applications
        #--------------------------------------------------------------
        # https://dev.to/deadwin19/deploy-nest-js-app-using-pm2-on-linux-ubuntu-server-88f
        # https://www.npmjs.com/package/pm2
        ######################################################################################
        #pm2:
        #    version: 'latest'
        #nest-cli:
        #    version: 'latest'
        vue-cli:
            version: 'latest'
        angular-cli:
            version: 'latest'
        create-react-app:
            version: 'latest'
        # Using for upgrade package.json dependencie's versions
        npm-upgrade:
            version: 'latest'

packages:
    - mc
    - gitflow
    - doxygen
    # Package 'curl' is defined in module 'docker'
    #- curl
    - vim
    - nano
    - dos2unix
    - unzip
    #- lynx
    # On CentOs8 Python2 is not installed by default but it is required from Sylius Setup
    #- python2
    # For Check about opened ports: `sudo lsof -i -P -n | grep LISTEN` OR USE: `sudo netstat -tulpn | grep LISTEN`
    - lsof

lamp:
    apacheVersion: 'installed'  # Latest Version
    phpVersion: '8.2'
    phpunit: false
    forcePhp7Repo: true
   
    mysql:
        provider: 'mysql' # Avaiable options: 'mysql', 'mariadb'
        # Empty Example: databases
        #databases: {}
        databases:
            vs_salary_j:
                name: 'VsSalaryJ'
                dump: ['/projects/VS_SalaryJ/doc/sql/VsSalaryJ.sql']
            vs_salary_j_JUNONA_OLD:
                name: 'Junona_OLD'
                dump: ['/projects/Junona/Junona-20210922.sql']

    # For JSP Pages require apache module 'proxy_ajp'
    apacheModules: 
        - expires
        - headers
        - rewrite
        - vhost_alias
        - env
        - ssl
        - proxy
        - proxy_fcgi
        - proxy_http
        - proxy_html
        # Used of Java Applications
        - proxy_ajp
        # Used of Python Applications
        - wsgi
        # Used of Ruby Applications
        - passenger

    phpSettings:
        'PHP/memory_limit': '-1'
        'PHP/max_execution_time': '300'
        'PHP/post_max_size': '2G'
        'PHP/upload_max_filesize': '2G'
        'Date/date.timezone': 'Europe/Sofia'
        'PHAR/phar.readonly': '0'

    phpModules:
        apcu:
            ini_prefix: '20-'
            provider: 'pecl'
        # ERROR: pecl/zendopcache requires PHP (version >= 5.2.0, version <= 5.5.0), installed version is 7.2.24
        #zendopcache:
        #    ini_prefix: '20-'
        #    provider: 'pecl'
        intl:
            ini_prefix: '20-'
        mbstring:
            ini_prefix: '20-'
        mongodb:
            ini_prefix: '20-'
            provider: 'pecl'
        
        # xdebug 3.x.x example config
        xdebug:
            ensure: 'latest'
            ini_prefix: '20-'
            provider: 'pecl'
            zend: true
            # see http://xdebug.org/docs/all_settings
            settings:
                # For xdebug3 many config vars are changed. 
                # Reference: https://xdebug.org/docs/upgrade_guide
                #
                # Create directory '/vagrant/tmp/xdebug' if not exixst
                # ---------------------------------------------------
                'xdebug.mode': 'debug,profile,trace'
                'xdebug.start_with_request': 'trigger'
                'xdebug.discover_client_host': '1'
                'xdebug.client_port': '9000'
                'xdebug.output_dir': '/vagrant/tmp/xdebug'
        
        zip:
            ini_prefix: '20-'
            
        #########################################################
        # Since php 8 the json extension is included in core, 
        # so you don't need it.
        #########################################################
        #json:
        #    ini_prefix: '20-'

        mysqlnd:
            ini_prefix: '20-'
            multifile_settings: true
            settings:
                mysqlnd: {}
                #mysql: {}
                #mysqli: {}
                #pdo_mysql: {}
                #sysvshm: {}
        xml:
            ini_prefix: '20-'
            multifile_settings: true
            settings:
                dom: {}
                simplexml: {}
                xmlwriter: {}
                xsl: {}
                #wddx: {}
                #xmlreader: {}
        gd:
            ini_prefix: '20-'
        bcmath:
            ini_prefix: '20-'
            
        # Required By Magento
        soap:
            ini_prefix: '20-'
            
        # Required by Compas_Billing
        ssh2:
            ini_prefix: '20-'
        gmp:
            ini_prefix: '20-'

    phpMyAdmin:
        source: 'https://files.phpmyadmin.net/phpMyAdmin/5.2.0/phpMyAdmin-5.2.0-all-languages.zip'
        targetDirName: 'phpMyAdmin-5.2.0-all-languages'

